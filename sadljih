local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Killer Hub | BloxFruits",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Killer Hub",
   LoadingSubtitle = "by gou9907 on discord",
   ShowText = "Rayfield", -- for mobile users to unhide rayfield, change if you'd like
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   ToggleUIKeybind = "K", -- The keybind to toggle the UI visibility (string like "K" or Enum.KeyCode)

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = true, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "7Q2WtqQ5V5", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "Killer Hub Key System",
      Subtitle = "Key System Get The Key From The Discord",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "KeyThatIsSigmaTbh", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"erytiubnfdssdfrl"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local PlayerTab = Window:CreateTab("Player", 4483362458) -- Title, Image

local Slider = PlayerTab:CreateSlider({
   Name = "Walkspeed",
   Range = {10, 100},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 1,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
    game.Players.LocalPlayer.Characacter:SetAttribute("SpeedMultiplier", Value)
   end,
})

local Slider = PlayerTab:CreateSlider({
   Name = "Dash length",
   Range = {10, 100},
   Increment = 1,
   Suffix = "length",
   CurrentValue = 1,
   Flag = "Slider2", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
    game.Players.LocalPlayer.Characacter:SetAttribute("DashLength", Value)
   end,
})

local Slider = PlayerTab:CreateSlider({
   Name = "Jump Height",
   Range = {10, 100},
   Increment = 1,
   Suffix = "Height",
   CurrentValue = 1,
   Flag = "Slider3", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
    game.Players.LocalPlayer.Characacter.Humanoid.JumpPower = Value
   end,
})

local Slider = PlayerTab:CreateSlider({
   Name = "Punch Cooldown",
   Range = {0.1, 1},
   Increment = 1,
   Suffix = "CoolDown",
   CurrentValue = 1,
   Flag = "Slider4", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
    game.Players.LocalPlayer.Characacter:SetAttribute("MeleeCooldown", Value)
   end,
})

local Slider = PlayerTab:CreateSlider({
   Name = "Health",
   Range = {100, 15012},
   Increment = 1,
   Suffix = "Health Ammount",
   CurrentValue = 1,
   Flag = "Slider5", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
    game.Players.LocalPlayer.Characacter:SetAttribute("MaxHealth", Value)
   end,
})

local Button = PlayerTab:CreateButton({
   Name = "Disable In Combat",
   Callback = function()
   game.Players.LocalPlayer.Characacter:SetAttribute("InCombat", false)
   end,
})
